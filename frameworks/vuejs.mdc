---
description: 
globs: 
alwaysApply: false
---
---
description: Vue.js 编码规则和最佳实践
globs: **/*.vue
alwaysApply: false
---

# Vue.js Guidelines

## Component Structure
- Use the Composition API instead of the Options API
- Keep components small and focused
- Integrate TypeScript correctly
- Implement proper props validation
- Use correct emit declarations
- Keep template logic simple

## Composition API
- Use ref and reactive correctly
- Implement appropriate lifecycle hooks
- Use composables for reusable logic
- Keep the setup function clean
- Use computed properties correctly
- Implement appropriate watchers

## State Management
- Use Pinia for state management
- Keep stores modular
- Use appropriate state composition
- Implement appropriate actions
- Use getters correctly
- Handle asynchronous state appropriately

## Performance
- Use component lazy loading correctly
- Implement proper caching
- Use computed properties correctly
- Avoid unnecessary watchers
- Use v-show and v-if correctly
- Implement proper key management

## Routing
- Use Vue Router correctly
- Implement appropriate navigation guards
- Use route meta fields correctly
- Handle route parameters appropriately
- Implement proper lazy loading
- Use appropriate navigation methods

## Forms
- Use v-model correctly
- Implement proper validation
- Handle form submission appropriately
- Show appropriate loading states
- Use proper error handling
- Implement proper form reset

## TypeScript Integration
- Use appropriate component type definitions
- Implement proper prop types
- Use appropriate emit declarations
- Handle type inference correctly
- Use appropriate composable types
- Implement proper store types

## Testing
- Write appropriate unit tests
- Implement proper component tests
- Use Vue Test Utils correctly
- Test composables appropriately
- Implement proper mocks
- Test asynchronous operations

## Best Practices
- Follow the Vue Style Guide
- Use appropriate naming conventions
- Keep component organization tidy
- Implement proper error handling
- Use appropriate event handling
- Write documentation for complex logic

## Build and Tooling
- Use Vite for development
- Configure proper build settings
- Use environment variables correctly
- Implement proper code splitting
- Handle resources appropriately
- Configure proper optimizations
